package org.contourdynamics.deskvantage.Entities;

// Generated May 16, 2016 12:41:31 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Lob;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * BpSysUserDetl generated by hbm2java
 */
@Entity
@Table(name = "BP_SYS_USER_DETL", catalog = "deskvantage")
public class BpSysUserDetl implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private BpSysUser bpSysUser;
	private String topic;
	private String avatar;
	private byte[] avatarBlob;
	private Integer idleTimeout;
	private Integer awayTimeout;

	public BpSysUserDetl() {
	}

	public BpSysUserDetl(BpSysUser bpSysUser, String topic, String avatar,
			byte[] avatarBlob, Integer idleTimeout, Integer awayTimeout) {
		this.bpSysUser = bpSysUser;
		this.topic = topic;
		this.avatar = avatar;
		this.avatarBlob = avatarBlob;
		this.idleTimeout = idleTimeout;
		this.awayTimeout = awayTimeout;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BPSYSUSER")
	public BpSysUser getBpSysUser() {
		return this.bpSysUser;
	}

	public void setBpSysUser(BpSysUser bpSysUser) {
		this.bpSysUser = bpSysUser;
	}

	@Column(name = "Topic")
	public String getTopic() {
		return this.topic;
	}

	public void setTopic(String topic) {
		this.topic = topic;
	}

	@Column(name = "Avatar")
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}
	@Lob
	@Column(name = "AvatarBlob")
	public byte[] getAvatarBlob() {
		return this.avatarBlob;
	}

	public void setAvatarBlob(byte[] avatarBlob) {
		this.avatarBlob = avatarBlob;
	}

	@Column(name = "IdleTimeout")
	public Integer getIdleTimeout() {
		return this.idleTimeout;
	}

	public void setIdleTimeout(Integer idleTimeout) {
		this.idleTimeout = idleTimeout;
	}

	@Column(name = "AwayTimeout")
	public Integer getAwayTimeout() {
		return this.awayTimeout;
	}

	public void setAwayTimeout(Integer awayTimeout) {
		this.awayTimeout = awayTimeout;
	}

}
